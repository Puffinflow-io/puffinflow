[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "puffinflow"
dynamic = ["version"]
description = "A powerful Python workflow orchestration framework with advanced resource management"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
maintainers = [
    { name = "Your Name", email = "your.email@example.com" },
]
keywords = [
    "workflow",
    "orchestration",
    "async",
    "state-management",
    "resource-allocation",
    "task-execution",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Framework :: AsyncIO",
]
dependencies = [
    "pydantic>=1.10.0,<3.0.0",
    "structlog>=20.0.0",
    "typing-extensions>=4.0.0;python_version<'3.10'",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "isort>=5.10.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
]
# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
]
# CLI dependencies
cli = [
    "click>=8.0.0",
    "rich>=12.0.0",
    "typer>=0.7.0",
]
# Monitoring and observability
monitoring = [
    "prometheus-client>=0.15.0",
    "opentelemetry-api>=1.15.0",
    "opentelemetry-sdk>=1.15.0",
]
# Integration dependencies
integrations = [
    "fastapi>=0.95.0",
    "celery>=5.2.0",
    "kubernetes>=25.0.0",
    "redis>=4.0.0",
]
# All optional dependencies
all = [
    "puffinflow[dev,docs,cli,monitoring,integrations]",
]

[project.urls]
Homepage = "https://github.com/yourusername/puffinflow"
Documentation = "https://puffinflow.readthedocs.io"
Repository = "https://github.com/yourusername/puffinflow.git"
"Bug Tracker" = "https://github.com/yourusername/puffinflow/issues"
Changelog = "https://github.com/yourusername/puffinflow/blob/main/CHANGELOG.md"

[project.scripts]
puffinflow = "puffinflow.cli.main:app"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["puffinflow*"]

[tool.setuptools_scm]
write_to = "src/puffinflow/version.py"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmarks",
    "asyncio: marks tests as requiring asyncio",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "src/puffinflow/version.py",
    "tests/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"